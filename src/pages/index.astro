---
import { getCollection } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';

const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body class="bg-gray-50 dark:bg-gray-900 transition-colors duration-300">
		<!-- Header -->
		<header class="bg-white dark:bg-gray-800 shadow-sm border-b border-gray-100 dark:border-gray-700 transition-colors duration-300">
			<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
				<div class="flex justify-between items-center py-6">
					<div class="flex items-center">
						<h1 class="text-2xl font-bold text-gray-900 dark:text-white">
							<a href="/main">Dev<span class="text-blue-600 dark:text-blue-400">Blog</span></a>
						</h1>
					</div>
					<div class="flex items-center">
						<button id="theme-toggle" class="theme-toggle flex items-center justify-center w-10 h-10">
							<svg id="sun-icon" class="w-5 h-5 text-yellow-500 hidden" fill="currentColor" viewBox="0 0 20 20">
								<path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd" />
							</svg>
							<svg id="moon-icon" class="w-5 h-5 text-gray-700" fill="currentColor" viewBox="0 0 20 20">
								<path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z" />
							</svg>
						</button>
					</div>
				</div>
			</div>
		</header>

		<!-- Hero Section -->
		<section class="py-12 px-4 sm:px-6 lg:px-8 bg-gradient-to-r from-blue-600 to-purple-600 dark:from-blue-700 dark:to-purple-800 text-white transition-colors duration-300">
			<div class="max-w-4xl mx-auto text-center">
				<h1 class="text-3xl md:text-4xl font-bold mb-3">
					Blog de Desenvolvimento
				</h1>
				<p class="text-lg text-blue-100 dark:text-blue-200">
					Artigos, tutoriais e dossiers sobre JavaScript, React e tecnologias modernas
				</p>
			</div>
		</section>

		<!-- Posts Grid -->
		<main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
			<div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
				{posts.map((post) => (
					<article class="bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden hover:shadow-xl dark:hover:shadow-2xl transition-all duration-300">
						<div class="p-6">
							<div class="flex items-center justify-between mb-4">
								<span class="px-3 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full text-sm font-medium">
									{post.data.title.includes('JavaScript') ? 'JavaScript' : 
									 post.data.title.includes('React') ? 'React' : 'Development'}
								</span>
								<span class="text-gray-500 dark:text-gray-400 text-sm">
									{post.data.pubDate.toLocaleDateString('pt-BR', {
										year: 'numeric',
										month: 'short',
										day: 'numeric',
									})}
								</span>
							</div>
							
							<h2 class="text-xl font-bold text-gray-900 dark:text-white mb-3 hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
								<a href={`/main/blog/${post.id}/`}>
									{post.data.title}
								</a>
							</h2>
							
							{post.data.description && (
								<p class="text-gray-600 dark:text-gray-300 mb-4 leading-relaxed">
									{post.data.description}
								</p>
							)}
							
							<div class="flex items-center justify-between">
								<span class="text-gray-500 dark:text-gray-400 text-sm">
									{post.body ? Math.ceil(post.body.length / 1000) : 5} min de leitura
								</span>
								<a 
									href={`/main/blog/${post.id}/`}
									class="text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 font-medium text-sm flex items-center"
								>
									Ler mais →
								</a>
							</div>
						</div>
					</article>
				))}
			</div>

			{posts.length === 0 && (
				<div class="text-center py-16">
					<h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">
						Nenhum post encontrado
					</h2>
					<p class="text-gray-600 dark:text-gray-300">
						Em breve teremos mais conteúdo por aqui!
					</p>
				</div>
			)}
		</main>

		<!-- Footer -->
		<footer class="bg-gray-900 dark:bg-black text-white py-8 px-4 sm:px-6 lg:px-8 transition-colors duration-300">
			<div class="max-w-7xl mx-auto text-center">
				<h3 class="text-xl font-bold mb-4">
					Dev<span class="text-blue-400">Blog</span>
				</h3>
				<p class="text-gray-400 dark:text-gray-300 mb-4 max-w-2xl mx-auto">
					Conteúdo de qualidade sobre desenvolvimento web, com foco em JavaScript, React e tecnologias modernas.
				</p>
				<div class="border-t border-gray-800 dark:border-gray-700 mt-6 pt-6">
					<p class="text-gray-400 dark:text-gray-300">&copy; 2025 DevBlog. Todos os direitos reservados.</p>
				</div>
			</div>
		</footer>

		<script>
			// Theme toggle functionality
			const themeToggle = document.getElementById('theme-toggle');
			const sunIcon = document.getElementById('sun-icon');
			const moonIcon = document.getElementById('moon-icon');
			
			// Check for saved theme or default to system preference
			const savedTheme = localStorage.getItem('theme');
			const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
			const isDark = savedTheme === 'dark' || (!savedTheme && prefersDark);
			
			// Set initial theme
			if (isDark) {
				document.documentElement.classList.add('dark');
				sunIcon.classList.remove('hidden');
				moonIcon.classList.add('hidden');
			} else {
				sunIcon.classList.add('hidden');
				moonIcon.classList.remove('hidden');
			}
			
			// Theme toggle handler
			themeToggle.addEventListener('click', () => {
				const isDarkMode = document.documentElement.classList.contains('dark');
				
				if (isDarkMode) {
					document.documentElement.classList.remove('dark');
					localStorage.setItem('theme', 'light');
					sunIcon.classList.add('hidden');
					moonIcon.classList.remove('hidden');
				} else {
					document.documentElement.classList.add('dark');
					localStorage.setItem('theme', 'dark');
					sunIcon.classList.remove('hidden');
					moonIcon.classList.add('hidden');
				}
			});
		</script>
	</body>
</html>
