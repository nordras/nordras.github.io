---
import { getLangFromUrl, getLocalizedUrl } from '../i18n/utils';
import type { Language } from '../i18n/translations';

interface Props {
	currentLang: Language;
}

const { currentLang } = Astro.props;
const currentUrl = Astro.url.pathname;

const languages = [
	{ code: 'pt', name: 'PortuguÃªs', flag: 'ðŸ‡§ðŸ‡·' },
	{ code: 'en', name: 'English', flag: 'ðŸ‡ºðŸ‡¸' },
] as const;
---

<div class="relative inline-block text-left">
	<select 
		id="language-selector" 
		class="bg-white dark:bg-white-800 border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 cursor-pointer"
	>
		{languages.map((lang) => (
			<option 
				value={getLocalizedUrl(currentUrl, lang.code as Language, currentLang)}
				selected={lang.code === currentLang}
			>
				{lang.flag} {lang.name}
			</option>
		))}
	</select>
</div>

<script>
	const selector = document.getElementById('language-selector') as HTMLSelectElement;
	selector?.addEventListener('change', (e) => {
		const target = e.target as HTMLSelectElement;
		window.location.href = target.value;
	});
</script>