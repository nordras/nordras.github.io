---
import { getLangFromUrl, getLocalizedUrl } from '../i18n/utils';
import type { Language } from '../i18n/translations';

interface Props {
	currentLang: Language;
}

const { currentLang } = Astro.props;
const currentUrl = Astro.url.pathname;

const languages = [
	{ code: 'pt', name: 'PortuguÃªs', flag: 'ðŸ‡§ðŸ‡·' },
	{ code: 'en', name: 'English', flag: 'ðŸ‡ºðŸ‡¸' },
] as const;

// Verificar se estamos em um post de blog
const isOnBlogPost = currentUrl.includes('/blog/');
---

<div class="relative inline-block text-left">
	<select 
		id="language-selector" 
		class="bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 cursor-pointer text-gray-900 dark:text-white"
	>
		{languages.map((lang) => (
			<option 
				value={getLocalizedUrl(currentUrl, lang.code as Language, currentLang)}
				selected={lang.code === currentLang}
			>
				{lang.flag} {lang.name}
				{isOnBlogPost && lang.code !== currentLang ? ' (vai para inÃ­cio)' : ''}
			</option>
		))}
	</select>
</div>

<script>
	const selector = document.getElementById('language-selector') as HTMLSelectElement;
	
	selector?.addEventListener('change', (e) => {
		const target = e.target as HTMLSelectElement;
		const selectedUrl = target.value;
		
		// Se a URL vai para a home, mostrar confirmaÃ§Ã£o
		const isGoingToHome = selectedUrl === '/' || selectedUrl === '/en/';
		const isCurrentlyOnPost = window.location.pathname.includes('/blog/');
		
		if (isGoingToHome && isCurrentlyOnPost) {
			const confirmed = confirm('Este post nÃ£o estÃ¡ disponÃ­vel no idioma selecionado. Deseja ir para a pÃ¡gina inicial?');
			if (confirmed) {
				window.location.href = selectedUrl;
			} else {
				// Restaurar seleÃ§Ã£o anterior
				target.value = window.location.pathname;
			}
		} else {
			window.location.href = selectedUrl;
		}
	});
</script>